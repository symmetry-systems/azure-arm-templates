{
	"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"subscriptionId": {
			"type": "string",
			"metadata": {
				"description": "Subscription Id for dataguard."
			}
		},
		"subscriptionsToMonitor": {
			"type": "array", 
			// "defaultValue": ["638dc5e8-9d48-485c-96f6-877ba307584e","6aa465aa-0075-40bc-a8da-cc33ef685b94", "ba296500-8b0a-4ca7-abff-1293cdd059eb", "a8bffe63-913d-401d-afd6-1f8a9b93787b"]
			"defaultValue": ["replace sub id 1 here", "replace sub id 2 here etc."]
		},
		"identityName": {
			"type": "string",
			"defaultValue": "template-created-dg-id",
			"allowedValues": [
				"template-created-dg-id"
			],
			"metadata": {
				"description": "Specifies the name of the user-assigned managed identity used for dataguard."
			}
		},
		"resourceGroupName": {
			"type": "string",
			"defaultValue": "dataguard-resource-grp",
			"allowedValues": [
				"dataguard-resource-grp"
			],
			"metadata": {
				"description": "Resource group name for dataguard."
			}
		},
		"createBastion":{
			"defaultValue": true,
			"type": "bool"
		},
		"location": {
			"type": "string",
			"defaultValue": "EastUs",
			"metadata": {
				"description": "The Azure location where the managed identity should be created."
			}
		}
	},
	"variables": {
		"nestedCreateResourceGroupDeployment": "[format('create-resource-group-{0}', parameters('resourceGroupName'))]",
		"nestedCreateIdentityDeployment": "[format('setup-id-{0}', parameters('identityName'))]",
		"nestedIdentityOwnSubContributorRoleAssignmentDeployment": "[format('assign-own-sub-contrib-role-{0}', parameters('identityName'))]",
		"nestedIdentityRootReaderRoleAssignmentDeployment": "[format('assign-root-reader-role-{0}', parameters('identityName'))]",
		"nestedCreateVirtualNetwork": "virtual-network-deployment",
		"vnetName": "dataguard-vnet",
		"nestedCreateStorageAccountDeployment": "create-storage-account",
		"nestedCreateStorageAccountPvtEpDeployment": "create-storage-account-pvt-ep",
		"nestedCreateActivityLogDiagSettingDeployment": "create-activityLog-diagSettings",
		"nestedCreateBastionDeployment": "create-bastion"
	},
	"resources": [
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('nestedCreateResourceGroupDeployment')]",
			"location": "[deployment().location]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"resourceGroupName": {
						"value": "[parameters('resourceGroupName')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"subscriptionId": {
						"value": "[parameters('subscriptionId')]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"subscriptionId": {
							"type": "string",
							"metadata": {
								"description": "subscriptionId for the deployment"
							}
						},
						"resourceGroupName": {
							"type": "string",
							"defaultValue": "dataguard-resource-grp",
							"metadata": {
								"description": "Name of the resourceGroup, will be created in the same location as the deployment."
							}
						},
						"location": {
							"type": "string",
							"defaultValue": "[deployment().location]",
							"metadata": {
								"description": "Location for the deployments and the resources"
							}
						}
					},
					"resources": [{
						"type": "Microsoft.Resources/deployments",
						"apiVersion": "2019-10-01",
						"name": "[format('create-{0}', parameters('resourceGroupName'))]",
						"subscriptionId": "[parameters('subscriptionId')]",
						"location": "[deployment().location]",
						"properties": {
							"expressionEvaluationOptions": {
								"scope": "inner"
							},
							"mode": "Incremental",
							"parameters": {
								"resourceGroupName": {
									"value": "[parameters('resourceGroupName')]"
								},
								"location": {
									"value": "[parameters('location')]"
								}
							},
							"templateLink": {
								"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/create-dataguard-resource-group.json",
								"contentVersion": "1.0.0.0"
							}
						}
					}]
				}
			}
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('nestedCreateIdentityDeployment')]",
			"location": "[deployment().location]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"identityName": {
						"value": "[parameters('identityName')]"
					},
					"subscriptionId": {
						"value": "[parameters('subscriptionId')]"
					},
					"resourceGroupName": {
						"value": "[parameters('resourceGroupName')]"
					},
					"location": {
						"value": "[parameters('location')]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"identityName": {
							"type": "string",
							"metadata": {
								"description": "dataguard identity"
							}
						},
						"subscriptionId": {
							"type": "string",
							"metadata": {
								"description": "subscriptionId for the deployment"
							}
						},
						"resourceGroupName": {
							"type": "string",
							"metadata": {
								"description": "resource group name"
							}
						},
						"location": {
							"type": "string"
						}
					},
					"resources": [{
						"type": "Microsoft.Resources/deployments",
						"apiVersion": "2019-10-01",
						"name": "[format('create-{0}', parameters('identityName'))]",
						"resourceGroup": "[parameters('resourceGroupName')]",
						"subscriptionId": "[parameters('subscriptionId')]",
						"properties": {
							"expressionEvaluationOptions": {
								"scope": "inner"
							},
							"mode": "Incremental",
							"parameters": {
								"identityName": {
									"value": "[parameters('identityName')]"
								},
								"location": {
									"value": "[parameters('location')]"
								}
							},
							"templateLink": {
								"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/create-dataguard-identity.json",
								"contentVersion": "1.0.0.0"
							}
						}
					}],
					"outputs": {
						"principalId": {
							"type": "string",
							"value": "[reference(format('create-{0}', parameters('identityName'))).outputs.principalId.value]"
						}
					}

				}
			},
			"dependsOn": [
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateResourceGroupDeployment'))]"
			]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('nestedIdentityOwnSubContributorRoleAssignmentDeployment')]",
			"location": "[deployment().location]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"identityId": {
						"value": "[reference(format('Microsoft.Resources/deployments/{0}', variables('nestedCreateIdentityDeployment'))).outputs.principalId.value]"
					},
					"subscriptionId": {
						"value": "[parameters('subscriptionId')]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"identityId": {
							"type": "string",
							"metadata": {
								"description": "dataguard identity"
							}
						},
						"subscriptionId": {
							"type": "string",
							"metadata": {
								"description": "subscriptionId for the deployment"
							}
						}
					},
					"resources": [{
						"type": "Microsoft.Resources/deployments",
						"apiVersion": "2019-10-01",
						"name": "[format('add-contrib-role-to-id')]",
						"subscriptionId": "[parameters('subscriptionId')]",
						"location": "[deployment().location]",
						"properties": {
							"expressionEvaluationOptions": {
								"scope": "inner"
							},
							"mode": "Incremental",
							"parameters": {
								"identityId": {
									"value": "[parameters('identityId')]"
								},
								"subscriptionId": {
									"value": "[parameters('subscriptionId')]"
								}
							},
							"templateLink": {
								"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/assign-contributor-role-to-sub.json",
								"contentVersion": "1.0.0.0"
							}
						}
					}]

				}
			},
			"dependsOn": [
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateIdentityDeployment'))]"
			]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('nestedIdentityRootReaderRoleAssignmentDeployment')]",
			"location": "[deployment().location]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"identityId": {
						"value": "[reference(format('Microsoft.Resources/deployments/{0}', variables('nestedCreateIdentityDeployment'))).outputs.principalId.value]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"identityId": {
							"type": "string",
							"metadata": {
								"description": "dataguard identity"
							}
						}
					},
					"resources": [{
						"type": "Microsoft.Resources/deployments",
						"apiVersion": "2019-10-01",
						"name": "[format('add-contrib-role-to-id')]",
						"location": "[deployment().location]",
						"properties": {
							"expressionEvaluationOptions": {
								"scope": "inner"
							},
							"mode": "Incremental",
							"parameters": {
								"identityId": {
									"value": "[parameters('identityId')]"
								}
							},
							"templateLink": {
								"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/assign-reader-role-to-root-group.json",
								"contentVersion": "1.0.0.0"
							}
						}
					}]

				}
			},
			"dependsOn": [
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateIdentityDeployment'))]"
			]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('nestedCreateVirtualNetwork')]",
			"location": "[deployment().location]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"vnetName": {
						"value": "[variables('vnetName')]"
					},
					"subscriptionId": {
						"value": "[parameters('subscriptionId')]"
					},
					"resourceGroupName": {
						"value": "[parameters('resourceGroupName')]"
					},
					"location": {
						"value": "[parameters('location')]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"vnetName": {
							"type": "string",
							"metadata": {
								"description": "dataguard identity"
							}
						},
						"subscriptionId": {
							"type": "string",
							"metadata": {
								"description": "subscriptionId for the deployment"
							}
						},
						"resourceGroupName": {
							"type": "string",
							"metadata": {
								"description": "resource group name"
							}
						},
						"location": {
							"type": "string"
						}
					},
					"resources": [{
						"type": "Microsoft.Resources/deployments",
						"apiVersion": "2019-10-01",
						"name": "[format('create-{0}', parameters('vnetName'))]",
						"resourceGroup": "[parameters('resourceGroupName')]",
						"subscriptionId": "[parameters('subscriptionId')]",
						"properties": {
							"expressionEvaluationOptions": {
								"scope": "inner"
							},
							"mode": "Incremental",
							"parameters": {
								"vnetName": {
									"value": "[parameters('vnetName')]"
								},
								"location": {
									"value": "[parameters('location')]"
								}
							},
							"templateLink": {
								"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/create-virtual-network.json",
								"contentVersion": "1.0.0.0"
							}
						}
					}],
					"outputs": {
						"vnetId": {
							"type": "string",
							"value": "[reference(format('create-{0}', parameters('vnetName'))).outputs.vnetId.value]"
						},
						"defaultSubnetId": {
							"type": "string",
							"value": "[reference(format('create-{0}', parameters('vnetName'))).outputs.defaultSubnetId.value]"
						},
						"bastionSubnetId": {
							"type": "string",
							"value": "[reference(format('create-{0}', parameters('vnetName'))).outputs.bastionSubnetId.value]"
						}
					}
				}
			},
			"dependsOn": [
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateResourceGroupDeployment'))]"
			]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('nestedCreateStorageAccountDeployment')]",
			"location": "[deployment().location]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"subscriptionId": {
						"value": "[parameters('subscriptionId')]"
					},
					"resourceGroupName": {
						"value": "[parameters('resourceGroupName')]"
					},
					"location": {
						"value": "[parameters('location')]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"subscriptionId": {
							"type": "string",
							"metadata": {
								"description": "subscriptionId for the deployment"
							}
						},
						"resourceGroupName": {
							"type": "string",
							"metadata": {
								"description": "resource group name"
							}
						},
						"location": {
							"type": "string"
						}
					},
					"resources": [{
							"type": "Microsoft.Resources/deployments",
							"apiVersion": "2019-10-01",
							"name": "create-dg-storage-account",
							"resourceGroup": "[parameters('resourceGroupName')]",
							"subscriptionId": "[parameters('subscriptionId')]",
							"properties": {
								"expressionEvaluationOptions": {
									"scope": "inner"
								},
								"mode": "Incremental",
								"parameters": {
									"location": {
										"value": "[parameters('location')]"
									}
								},
								"templateLink": {
									"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/create-pvt-storage-accnt.json",
									"contentVersion": "1.0.0.0"
								}
							}
						},
						{
							"type": "Microsoft.Resources/deployments",
							"apiVersion": "2019-10-01",
							"name": "create-private-blob-dns-zone",
							"resourceGroup": "[parameters('resourceGroupName')]",
							"subscriptionId": "[parameters('subscriptionId')]",
							"properties": {
								"expressionEvaluationOptions": {
									"scope": "inner"
								},
								"mode": "Incremental",
								"parameters": {
									"name": {
										"value": "privatelink.blob.core.windows.net"
									}
								},
								"templateLink": {
									"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/create-private-dns-zone.json",
									"contentVersion": "1.0.0.0"
								}
							}
						}
					],
					"outputs": {
						"storageAccountName": {
							"type": "string",
							"value": "[reference('create-dg-storage-account').outputs.storageAccountName.value]"
						},
						"storageAccountId": {
							"type": "string",
							"value": "[reference('create-dg-storage-account').outputs.storageAccountId.value]"
						},
						"privateDnsZoneId": {
							"type": "string",
							"value": "[reference('create-private-blob-dns-zone').outputs.privateDnsZoneId.value]"
						}
					}

				}
			},
			"dependsOn": [
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateResourceGroupDeployment'))]"
			]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('nestedCreateStorageAccountPvtEpDeployment')]",
			"location": "[deployment().location]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"subscriptionId": {
						"value": "[parameters('subscriptionId')]"
					},
					"resourceGroupName": {
						"value": "[parameters('resourceGroupName')]"
					},
					"location": {
						"value": "[parameters('location')]"
					},
					"storageAccountName": {
						"value": "[reference(format('Microsoft.Resources/deployments/{0}', variables('nestedCreateStorageAccountDeployment'))).outputs.storageAccountName.value]"
					},
					"storageAccountId": {
						"value": "[reference(format('Microsoft.Resources/deployments/{0}', variables('nestedCreateStorageAccountDeployment'))).outputs.storageAccountId.value]"
					},
					"defaultSubnetId": {
						"value": "[reference(format('Microsoft.Resources/deployments/{0}', variables('nestedCreateVirtualNetwork'))).outputs.defaultSubnetId.value]"
					},
					"privateDnsZoneId": {
						"value": "[reference(format('Microsoft.Resources/deployments/{0}', variables('nestedCreateStorageAccountDeployment'))).outputs.privateDnsZoneId.value]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"subscriptionId": {
							"type": "string",
							"metadata": {
								"description": "subscriptionId for the deployment"
							}
						},
						"resourceGroupName": {
							"type": "string",
							"metadata": {
								"description": "resource group name"
							}
						},
						"location": {
							"type": "string"
						},
						"storageAccountName": {
							"type": "string"
						},
						"storageAccountId": {
							"type": "string"
						},
						"defaultSubnetId": {
							"type": "string"
						},
						"privateDnsZoneId": {
							"type": "string"
						}
					},
					"resources": [{
						"type": "Microsoft.Resources/deployments",
						"apiVersion": "2019-10-01",
						"name": "create-storage-account-blob-pvt-ep",
						"resourceGroup": "[parameters('resourceGroupName')]",
						"subscriptionId": "[parameters('subscriptionId')]",
						"properties": {
							"expressionEvaluationOptions": {
								"scope": "inner"
							},
							"mode": "Incremental",
							"parameters": {
								"location": {
									"value": "[parameters('location')]"
								},
								"privateEndpointName": {
									"value": "[concat(parameters('storageAccountName'), '-blob-pvt-ep')]"
								},
								"privateLinkResource": {
									"value": "[parameters('storageAccountId')]"
								},
								"targetSubResource": {
									"value": ["blob"]
								},
								"subnetId": {
									"value": "[parameters('defaultSubnetId')]"
								},
								"privateDnsZoneId": {
									"value": "[parameters('privateDnsZoneId')]"
								}
							},
							"templateLink": {
								"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/create-pvt-ep-blob.json",
								"contentVersion": "1.0.0.0"
							}
						}
					}]
				}
			},
			"dependsOn": [
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateStorageAccountDeployment'))]",
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateVirtualNetwork'))]"
			]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[concat(variables('nestedCreateActivityLogDiagSettingDeployment'), '-', copyIndex())]",
			"location": "[deployment().location]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"storageAccountId": {
						"value": "[reference(format('Microsoft.Resources/deployments/{0}', variables('nestedCreateStorageAccountDeployment'))).outputs.storageAccountId.value]"
					},
					"subscriptionId": {
						"value": "[parameters('subscriptionsToMonitor')[copyIndex()]]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"storageAccountId": {
							"type": "string",
							"metadata": {
								"description": "dataguard storage account"
							}
						},
						"subscriptionId":{
							"type": "string"
						}
					},
					"resources": [
						{
							"type": "Microsoft.Resources/deployments",
							"apiVersion": "2019-10-01",
							"name": "enable-activity-log-at-root",
							"location": "[deployment().location]",
							"subscriptionId": "[parameters('subscriptionId')]",
							"properties": {
								"expressionEvaluationOptions": {
									"scope": "inner"
								},
								"mode": "Incremental",
								"parameters": {
									"storageAccountId": {
										"value": "[parameters('storageAccountId')]"
									},
									"settingName": {
										"value": "dg-diagnostic-settings"
									}
								},
								"templateLink": {
									"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/create-diagnostic-setting-for-mgm-grp.json",
									"contentVersion": "1.0.0.0"
								}
							}
						}
					]

				}
			},
			"copy": {
				"name": "subscriptionsToMonitorcopy",
				"count": "[length(parameters('subscriptionsToMonitor'))]"
			},
			"dependsOn": [
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateStorageAccountDeployment'))]"
			]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('nestedCreateBastionDeployment')]",
			"location": "[deployment().location]",
			"condition": "[equals(parameters('createBastion'), true())]",
			"properties": {
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"mode": "Incremental",
				"parameters": {
					"subscriptionId": {
						"value": "[parameters('subscriptionId')]"
					},
					"resourceGroupName": {
						"value": "[parameters('resourceGroupName')]"
					},
					"bastionSubnetId": {
						"value": "[reference(format('Microsoft.Resources/deployments/{0}', variables('nestedCreateVirtualNetwork'))).outputs.bastionSubnetId.value]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"subscriptionId": {
							"type": "string",
							"metadata": {
								"description": "subscriptionId for the deployment"
							}
						},
						"resourceGroupName": {
							"type": "string",
							"metadata": {
								"description": "resource group name"
							}
						},
						"bastionSubnetId": {
							"type": "string"
						}
					},
					"resources": [{
						"type": "Microsoft.Resources/deployments",
						"apiVersion": "2019-10-01",
						"name": "create-bastion",
						"resourceGroup": "[parameters('resourceGroupName')]",
						"subscriptionId": "[parameters('subscriptionId')]",
						"properties": {
							"expressionEvaluationOptions": {
								"scope": "inner"
							},
							"mode": "Incremental",
							"parameters": {
								"subnetId": {
									"value": "[parameters('bastionSubnetId')]"
								}
							},
							"templateLink": {
								"uri": "https://raw.githubusercontent.com/sachintyagi22/azure-templates/individual/templates/create-bastion.json",
								"contentVersion": "1.0.0.0"
							}
						}
					}]
				}
			},
			"dependsOn": [
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateStorageAccountDeployment'))]",
				"[format('Microsoft.Resources/deployments/{0}', variables('nestedCreateVirtualNetwork'))]"
			]
		}
	]
}